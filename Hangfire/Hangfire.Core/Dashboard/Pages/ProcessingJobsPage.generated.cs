#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.Dashboard.Pages
{
    
    #line 2 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
    using System;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    
    #line 3 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 4 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
    using Hangfire.Dashboard;
    
    #line default
    #line hidden
    
    #line 5 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
    using Hangfire.Dashboard.Resources;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class ProcessingJobsPage : RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\n");








            
            #line 8 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
  
    Layout = new LayoutPage(Strings.ProcessingJobsPage_Title);

    int from, perPage;

    int.TryParse(Query("from"), out from);
    int.TryParse(Query("count"), out perPage);

    var monitor = Storage.GetMonitoringApi();
    var pager = new Pager(from, perPage, monitor.ProcessingCount());
    var processingJobs = monitor.ProcessingJobs(pager.FromRecord, pager.RecordsPerPage);
    var servers = monitor.Servers();


            
            #line default
            #line hidden
WriteLiteral("\n<div class=\"row\">\n    <div class=\"col-md-3\">\n        ");


            
            #line 24 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
   Write(Html.JobsSidebar());

            
            #line default
            #line hidden
WriteLiteral("\n    </div>\n    <div class=\"col-md-9\">\n        <h1 class=\"page-header\">");


            
            #line 27 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                           Write(Strings.ProcessingJobsPage_Title);

            
            #line default
            #line hidden
WriteLiteral("</h1>\n\n");


            
            #line 29 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
         if (pager.TotalPageCount == 0)
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"alert alert-info\">\n                ");


            
            #line 32 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
           Write(Strings.ProcessingJobsPage_NoJobs);

            
            #line default
            #line hidden
WriteLiteral("\n            </div>\n");


            
            #line 34 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
        }
        else
        {

            
            #line default
            #line hidden
WriteLiteral("            <div class=\"js-jobs-list\">\n                <div class=\"btn-toolbar bt" +
"n-toolbar-top\">\n                    <button class=\"js-jobs-list-command btn btn-" +
"sm btn-primary\"\n                            data-url=\"");


            
            #line 40 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                 Write(Url.To("/jobs/processing/requeue"));

            
            #line default
            #line hidden
WriteLiteral("\"\n                            data-loading-text=\"");


            
            #line 41 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                          Write(Strings.Common_Enqueueing);

            
            #line default
            #line hidden
WriteLiteral("\"\n                            disabled=\"disabled\">\n                        <span " +
"class=\"glyphicon glyphicon-repeat\"></span>\n                        ");


            
            #line 44 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                   Write(Strings.Common_RequeueJobs);

            
            #line default
            #line hidden
WriteLiteral("\n                    </button>\n\n                    <button class=\"js-jobs-list-c" +
"ommand btn btn-sm btn-default\"\n                            data-url=\"");


            
            #line 48 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                 Write(Url.To("/jobs/processing/delete"));

            
            #line default
            #line hidden
WriteLiteral("\"\n                            data-loading-text=\"");


            
            #line 49 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                          Write(Strings.Common_Deleting);

            
            #line default
            #line hidden
WriteLiteral("\"\n                            data-confirm=\"");


            
            #line 50 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                     Write(Strings.Common_DeleteConfirm);

            
            #line default
            #line hidden
WriteLiteral("\"\n                            disabled=\"disabled\">\n                        <span " +
"class=\"glyphicon glyphicon-remove\"></span>\n                        ");


            
            #line 53 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                   Write(Strings.Common_DeleteSelected);

            
            #line default
            #line hidden
WriteLiteral("\n                    </button>\n\n                    ");


            
            #line 56 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
               Write(Html.PerPageSelector(pager));

            
            #line default
            #line hidden
WriteLiteral(@"
                </div>

                <div class=""table-responsive"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th class=""min-width"">
                                    <input type=""checkbox"" class=""js-jobs-list-select-all"" />
                                </th>
                                <th class=""min-width"">");


            
            #line 66 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                 Write(Strings.Common_Id);

            
            #line default
            #line hidden
WriteLiteral("</th>\n                                <th class=\"min-width\">");


            
            #line 67 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                 Write(Strings.Common_Server);

            
            #line default
            #line hidden
WriteLiteral("</th>\n                                <th>");


            
            #line 68 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                               Write(Strings.Common_Job);

            
            #line default
            #line hidden
WriteLiteral("</th>\n                                <th class=\"align-right\">");


            
            #line 69 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                   Write(Strings.ProcessingJobsPage_Table_Started);

            
            #line default
            #line hidden
WriteLiteral("</th>\n                            </tr>\n                        </thead>\n        " +
"                <tbody>\n");


            
            #line 73 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                             foreach (var job in processingJobs)
                            {

            
            #line default
            #line hidden
WriteLiteral("                                <tr class=\"js-jobs-list-row ");


            
            #line 75 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                        Write(!job.Value.InProcessingState ? "obsolete-data" : null);

            
            #line default
            #line hidden
WriteLiteral(" ");


            
            #line 75 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                                                                                 Write(job.Value.InProcessingState ? "hover" : null);

            
            #line default
            #line hidden
WriteLiteral("\">\n                                    <td>\n");


            
            #line 77 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                         if (job.Value.InProcessingState)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <input type=\"checkbox\" class=\"js-jobs" +
"-list-checkbox\" name=\"jobs[]\" value=\"");


            
            #line 79 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                                                                                 Write(job.Key);

            
            #line default
            #line hidden
WriteLiteral("\" />\n");


            
            #line 80 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </td>\n                                    <td" +
" class=\"min-width\">\n                                        ");


            
            #line 83 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                   Write(Html.JobIdLink(job.Key));

            
            #line default
            #line hidden
WriteLiteral("\n");


            
            #line 84 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                         if (!job.Value.InProcessingState)
                                        {

            
            #line default
            #line hidden
WriteLiteral("                                            <span title=\"");


            
            #line 86 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                    Write(Strings.Common_JobStateChanged_Text);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"glyphicon glyphicon-question-sign\"></span>\n");


            
            #line 87 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                        }

            
            #line default
            #line hidden
WriteLiteral("                                    </td>\n");


            
            #line 89 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                     if (!job.Value.InProcessingState)
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <td colspan=\"3\">");


            
            #line 91 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                   Write(Strings.Common_JobStateChanged_Text);

            
            #line default
            #line hidden
WriteLiteral("</td>\n");


            
            #line 92 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                    }
                                    else
                                    {

            
            #line default
            #line hidden
WriteLiteral("                                        <td class=\"min-width\">\n                  " +
"                          ");


            
            #line 96 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                       Write(Html.ServerId(job.Value.ServerId));

            
            #line default
            #line hidden
WriteLiteral("\n                                        </td>\n");



WriteLiteral("                                        <td class=\"word-break\">\n");


            
            #line 99 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                             if (servers.All(x => x.Name != job.Value.ServerId || x.Heartbeat < DateTime.UtcNow.AddMinutes(-1)))
                                            {

            
            #line default
            #line hidden
WriteLiteral("                                                <span title=\"");


            
            #line 101 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                        Write(Strings.ProcessingJobsPage_Aborted);

            
            #line default
            #line hidden
WriteLiteral("\" class=\"glyphicon glyphicon-warning-sign\" style=\"font-size: 10px;\"></span>\n");


            
            #line 102 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                            }

            
            #line default
            #line hidden
WriteLiteral("\n                                            ");


            
            #line 104 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                       Write(Html.JobNameLink(job.Key, monitor.JobDetails(job.Key).Properties["RecurringJobId"], job.Value.Job));

            
            #line default
            #line hidden
WriteLiteral("\n                                        </td>\n");



WriteLiteral("                                        <td class=\"align-right\">\n");


            
            #line 107 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                             if (job.Value.StartedAt.HasValue)
                                            {
                                                
            
            #line default
            #line hidden
            
            #line 109 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                           Write(Html.RelativeTime(job.Value.StartedAt.Value));

            
            #line default
            #line hidden
            
            #line 109 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                                                                             
                                            }

            
            #line default
            #line hidden
WriteLiteral("                                        </td>\n");


            
            #line 112 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                                    }

            
            #line default
            #line hidden
WriteLiteral("                                </tr>\n");


            
            #line 114 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
                            }

            
            #line default
            #line hidden
WriteLiteral("                        </tbody>\n                    </table>\n                </d" +
"iv>\n\n                ");


            
            #line 119 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
           Write(Html.Paginator(pager));

            
            #line default
            #line hidden
WriteLiteral("\n            </div>\n");


            
            #line 121 "..\..\Dashboard\Pages\ProcessingJobsPage.cshtml"
        }

            
            #line default
            #line hidden
WriteLiteral("    </div>\n</div>");


        }
    }
}
#pragma warning restore 1591
